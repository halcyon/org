* Goals
** Short Term
*** Technical
**** TODO An Introduction To Functional Programming Through Lambda Calculus
**** STARTED [[http://xuanji.appspot.com/isicp/lambda.html][Lambda Calculus]]
*** Non-Technical
**** STARTED [[http://theultimatehang.com/2012/07/portable-hammock-pipe-stand/][Build a Portable Hammock Pipe Stand]]
**** http://www.loopalien.com/
** Long Term
*** Technical
**** TODO [[http://sarabander.github.io/sicp/][Structure and Interpretation of Computer Programs]]
*** Non-Technical
**** TODO [[http://12factor.net/][The Twelve-Factor App]]

* Todo List [55/98]
** Todo [0/41]
*** GS Bank
*** [[http://orgmode.org/manual/Capture.html][Org Capture]]
user> (clojure.pprint/pprint (filter #(= "1.9" (:added (meta %))) (vals (ns-publics 'clojure.core))))
(#'clojure.core/qualified-keyword?
 #'clojure.core/*print-namespace-maps*
 #'clojure.core/inst-ms
 #'clojure.core/any?
 #'clojure.core/boolean?
 #'clojure.core/inst?
 #'clojure.core/simple-symbol?
 #'clojure.core/StackTraceElement->vec
 #'clojure.core/uri?
 #'clojure.core/double?
 #'clojure.core/int?
 #'clojure.core/bigdec?
 #'clojure.core/indexed?
 #'clojure.core/simple-keyword?
 #'clojure.core/neg-int?
 #'clojure.core/bounded-count
 #'clojure.core/bytes?
 #'clojure.core/ident?
 #'clojure.core/qualified-ident?
 #'clojure.core/nat-int?
 #'clojure.core/pos-int?
 #'clojure.core/uuid?
 #'clojure.core/simple-ident?
 #'clojure.core/qualified-symbol?
 #'clojure.core/seqable?)
*** TODO [[https://stefanoborini.gitbooks.io/modelviewcontroller/content/02_mvc_variations/variations_on_the_triad/10_model_view_adapter.html][Model View Adapter]]
*** TODO [[https://www.youtube.com/watch?v=VNTQ-M_uSo8]["Agility & Robustness: Clojure spec" by Stuart Halloway]]
*** TODO [[http://clojure.org/guides/spec#_instrumentation_and_testing][Instrumentation and Testing]]
*** TODO [[https://leanpub.com/understandinges6/read][Understanding ES6]]
*** TODO [[https://reactjs.co/][ReactJS Redux, the Right Way]]
*** TODO mail in adidas shoes
*** TODO mail in passport renewal
*** TODO https://sourcemaking.com/design_patterns
*** TODO http://mishadoff.com/blog/clojure-design-patterns/
*** TODO [[https://asciinema.org/a/84033][CommonLisp SLIME, Quicklisp, ASDF and Prove Test-Driven Development Session]]
*** TODO [[https://ftfl.ca/blog/2015-12-28-emacs-clipboard-manager.html][emacs clipboard manager]]
*** TODO [[http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session][ssh clipboard]]
*** TODO [[http://lispcookbook.github.io/cl-cookbook/][Common Lisp Cookbook]]
*** TODO [[https://www.emacswiki.org/emacs/ElispCookbook][Elisp Cookbook]]
*** TODO [[https://github.com/nickg/swank-chicken][Swank Chicken]] [[http://wiki.call-cc.org/eggref/4/slime][Chicken Slime]]
*** TODO [[http://www.ccs.neu.edu/home/matthias/HtDP2e/index.html][(RACKET) How to Design Programs, Second Edition]]
*** TODO [[http://clojure.org/reference/multimethods][Clojure Multimethods and Hierarchies]]
*** TODO [[http://clojure.org/guides/spec#_instrumentation_and_testing][Instrumentation and Testing]]
*** TODO [[http://baatz.io/posts/haskell-in-a-startup/]]
*** TODO [[https://christopherdbui.com][cb on software]]
*** TODO [[http://www.viksit.com/tags/clojure/practical-applications-y-combinator-clojure/][Practical applications of Y Combinators in Clojure]]
*** TODO [[http://blog.klipse.tech/lambda/2016/08/10/y-combinator-app.html][Y combinator real life application: recursive memoization in clojure]]
*** TODO finish [[https://youtu.be/dGVqrGmwOAw?t=1317][Clojure Concurrency - Rich Hickey]]
*** TODO Learn refs and agents [[http://www.tbray.org/ongoing/When/200x/2009/12/01/Clojure-Theses][Eleven Theses on Clojure]] [[http://blog.jayfields.com/2011/04/clojure-state-management.html][JayFields - It's About State]] [[http://www.shayne.me/blog/2015/2015-09-14-clojure-agents/][Clojure's Overlooked Agents]]
*** TODO http://joearms.github.io/2013/05/31/a-week-with-elixir.html
*** TODO Buy soft gum picks
*** TODO https://www.infoq.com/presentations/Clojure-Reducers
*** TODO https://bendyworks.com/transducers-clojures-next-big-idea/
*** TODO http://kukuruku.co/hub/funcprog/clojure-transducers-reducers-and-other-stuff
*** TODO http://www.infoq.com/presentations/Clojure-Reducers
*** TODO http://blog.klipse.tech
*** TODO http://www.parens-of-the-dead.com
*** TODO [[https://www.youtube.com/watch?v=ZQkIWWTygio][Jeanine Adkisson - Variants are Not Unions]]
*** TODO https://tbaldridge.pivotshare.com/categories/function-of-the-day/2084/media
*** TODO [[https://juxt.pro/blog/posts/yada-1.html][Yada Part 1]]
*** TODO [[https://juxt.pro/blog/posts/yada-2.html][Yada Part 2]]
*** TODO [[https://www.youtube.com/watch?v=0SARbwvhupQw][Google I/O - The Myth of the Genius Programmer]]
*** TODO https://github.com/weavejester/reloaded.repl [[https://www.reddit.com/r/Clojure/comments/4rcwyi/edge_a_complete_clojure_project_you_can_leap_from/d51kzyi]]
*** TODO http://daveyarwood.github.io/2014/07/30/20-cool-clojure-functions/
*** TODO [[http://firstround.com/review/this-90-day-plan-turns-engineers-into-remarkable-managers/][This 90-Day Plan Turns Engineers into Remarkable Managers]]
*** TODO Tasty Trade
*** TODO fix cl-lib namespace issue in org-reveal

** Done [55/55]
*** Clojure [30/30]
**** DONE [[http://blog.klipse.tech/lambda/2016/08/07/pure-y-combinator-clojure.html][Lambda Calculus: The Y combinator in clojure]]
**** DONE [[http://blog.klipse.tech/lambda/2016/08/07/almost-y-combinator-clojure.html][Recursions without names: Introduction to the Y combinator in clojure]]
**** DONE [[http://blog.klipse.tech/lambda/2016/07/24/lambda-calculus-2.html][Lambda Calculus Live Tutorial with Klipse: Boolean Algebra]]
**** DONE [[https://www.youtube.com/watch?v=o69H0MXCNxw][Zach Tellman - Some Things That Macros Do - Curry On]]
**** DONE Learn about "advising" lisp functions
**** DONE Learn to write clojure test fixtures
**** DONE Master clojure reader conditionals
**** DONE Master using macros in clojurescript
**** DONE Learn clojure macros
**** DONE Learn about clojure's support for regexes and groups
**** DONE Master building clojure transducers from "off the shelf" transducers
**** DONE Master writing clojure transducers from reducing functions
**** DONE Master writing clojure transducers from scratch
**** DONE Master clojure reduce-kv
**** DONE Master clojure reduce and reducing functions
**** DONE [[http://blog.klipse.tech/lambda/2016/07/24/lambda-calculus-1.html][Numbers and Arithmetics with functions only: lambda calculus live tutorial]]
**** DONE Learn property-based testing using clojure.spec
**** DONE Learn clojure.spec
**** DONE Learn oauth2 protocol and implement in clojure
**** DONE Learn how to use clojurescript with [[https://github.com/drapanjanas/re-natal][React Native]]
**** DONE Learn [[http://reagent-project.github.io][Reagent]]
**** DONE Master Functional Reactive Programming [[https://github.com/Day8/re-frame][Re-frame]]
**** DONE [[http://www.lispcast.com/clj-refactor][lisp-cast cheat sheet rationale]]
**** DONE Learn clojure multimethods
**** DONE Learn clojure deftype
**** DONE Learn clojure reify
**** DONE Learn clojure protocols
**** DONE Learn clojure records
**** DONE [[https://www.hackerrank.com/domains/tutorials/30-days-of-code][30 Days of Code - Java based HackerRank course]]
**** DONE Write a [[https://github.com/halcyon/hackerrank-clj][test harness in Clojure that can evaluate HackerRank solutions]]
*** Open Source Contributions [5/5]
**** DONE update defunkt's emacs gist documentation to use oauth tokens - [[https://github.com/defunkt/gist.el/pull/91][PR-91]]
**** DONE fix java 8 doc lookups in ensime-server - [[https://github.com/ensime/ensime-server/pull/1441][PR-1441]]
**** DONE Refactor org2jekyll to accept jekyll properties [[https://github.com/ardumont/org2jekyll/pull/41][PR-41]]
**** DONE Setup CI for org2jekyll with travis [[https://github.com/ardumont/org2jekyll/pull/31][PR-31]]
**** DONE Implement run test at point for testing in Emacs Lisp [[https://github.com/tonini/overseer.el/pull/8][PR-8]]
*** DONE [[http://xuanji.appspot.com/isicp/lambda.html][From Church Numerals to Y Combinators]]
*** DONE Setup emacs to automate gnupg encryption of private information and to automatically sign git commits
*** DONE http://orgmode.org/manual/Fast-access-to-TODO-states.html#Fast-access-to-TODO-states
*** DONE check out slack emacs clients (valuable for moving code in and out of emacs) - and for thinking about SMS emacs
*** DONE Learn google data apis
*** DONE Venkat's erlang talk
*** DONE Write tests for [[https://github.com/halcyon/fundamentals][java8 lambda and streaming code]]
*** DONE Use diminish on several minor modes - flycheck etc
*** DONE Write [[https://github.com/halcyon/fundamentals][java8 lambda and streaming code]]
*** DONE [[https://github.com/yjwen/org-reveal][Convert org mode to reveal slide shows]] [[http://jr0cket.co.uk/2013/10/create-cool-slides--Org-mode-Revealjs.html][cool slides]]
*** DONE presentations should go on slides.zeddworks.com
*** DONE http://www.perfectlyrandom.org/2014/06/29/adding-disqus-to-your-jekyll-powered-github-pages/
*** DONE Flycheck Clojure [[https://github.com/halcyon/dotfiles/blob/master/emacs/.emacs.d/init.el#L453-L468][init.el changes]] and [[https://github.com/halcyon/dotfiles/blob/master/lein/.lein/profiles.clj#L9][lein profile changes]]
*** DONE Turn org files into slide shows
*** DONE https://github.com/clojure-emacs/clj-refactor.el
*** DONE Setup EMACS as a postgres client
*** DONE [[https://allysonjulian.com/setting-up-docker-with-xhyve/][Setting up docker with xhyve (OS X virtualization)]]
*** DONE https://github.com/flycheck/flycheck
*** DONE https://www.masteringemacs.org/article/spotlight-flycheck-a-flymake-replacement
*** DONE Setup persistent nrepl history in EMACS

* Hold [0/77]
** Git
*** HOLD [[https://codewords.recurse.com/issues/two/git-from-the-inside-out][Git From the Inside Out]]
*** HOLD https://jwiegley.github.io/git-from-the-bottom-up/
*** HOLD [[https://git-scm.com/docs/git-rebase][Splitting Commits]]

*** HOLD [[https://hackernoon.com/lesser-known-git-commands-151a1918a60#.q9w1gtwhh][Lesser Known Git Commands]]
** HOLD [[http://learnyouahaskell.com/][Learn You a Haskell for Great Good!]]
** HOLD [[http://www.macs.hw.ac.uk/~greg/books/gjm.book95.ps][G.J.Michaelson, Elementary Standard ML, UCL Press, ISBN 1-85728-398-8, 1995]]
** HOLD [[http://www.macs.hw.ac.uk/~greg/books/gjm.lambook88.ps][G.J.Michaelson, An Introduction to Functional Programming Through Lambda Calculus, Addison-Wesley, ISBN 0-201-17812-5, 1988]]
** HOLD [[https://quantumexperience.ng.bluemix.net/qstage/#/tutorial?sectionId=c59b3710b928891a1420190148a72cce][IBM Quantum Computing Tutorial]]
** HOLD [[http://exercism.io/][Setup exercism.io to practice Haskell exercises]]
** HOLD [[http://www.drdobbs.com/parallel/lisp-classes-in-the-metaobject-protocol/200000266][Lisp: Classes in the Metaobject Protocol]]
** HOLD [[http://learnyouanelm.github.io/][Learn You an Elm]]
** HOLD [[http://learnyousomeerlang.com/][Learn You Some Erlang for Great Good!]]
** HOLD [[https://www.youtube.com/playlist?list=PLlML6SMLMRgAooeL26mW502jCgWikqx_n][University of Kent MOOC - Functional Programming with Erlang]]
** HOLD FATS talk on configuring Emacs
** HOLD FATS talk on flycheck-clojure
** HOLD FATS talk on using EMACS as a postgres client
** HOLD FATS talk on setting up EMACS for the terminal
** HOLD https://pragprog.com/book/cjclojure/mastering-clojure-macros
** HOLD [[http://gigamonkeys.com/book/][Practical Common Lisp]]
** HOLD [[https://class.coursera.org/progfun-002/lecture][Coursera - Functional Programming Principles in Scala]]
** HOLD [[http://www.alchemist-elixir.org/][Alchemist - Elixir Integration for Emacs]]
** HOLD https://www.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/4_Threads.html
** HOLD https://github.com/patric-r/jvmtop
** HOLD http://stackoverflow.com/questions/2129044/java-heap-terminology-young-old-and-permanent-generations
** HOLD http://stuartsierra.com/2016/01/09/how-to-name-clojure-functions
** HOLD https://github.com/jkbrzt/httpie
** HOLD [[http://sarabander.github.io/sicp/html/1_002e1.xhtml#g_t1_002e1][SICP - 1.1 Sections 1-8 The Elements of Programming]]
** HOLD http://www.sicpdistilled.com/
** HOLD http://acaird.github.io/computers/2013/05/24/blogging-with-org-and-git/
** HOLD http://emacs-doctor.com/blogging-from-emacs.html
** HOLD http://tex.stackexchange.com/questions/157332/how-can-you-make-your-cv-accessible
** HOLD https://github.com/punchagan/resume
** HOLD https://clusterhq.com/2016/02/11/kubernetes-redis-cluster/?utm_source=dbweekly&utm_medium=email
** HOLD https://github.com/mhjort/clj-gatling
** HOLD https://github.com/hugoduncan/criterium
** HOLD https://github.com/mhjort/clojider
** HOLD https://pragprog.com/book/actb/technical-blogging
** HOLD http://jonathangraham.github.io/2015/09/01/Clojure%20functions/
** HOLD http://jonathangraham.github.io/2016/01/07/property_based_testing_clojure_functions/
** HOLD [[https://github.com/awkay/om-tutorial][Learn Om Next using Dev Cards]]
** HOLD The Little Schemer
** HOLD [[https://braydie.gitbooks.io/how-to-be-a-programmer/content/en/index.html][How to be a Programmer]]
** HOLD https://pragprog.com/book/mbfpp/functional-programming-patterns-in-scala-and-clojure
** HOLD http://www.4clojure.com
** HOLD 100 Clojure Functions with Anki Flashcards
** HOLD https://www.masteringemacs.org
** HOLD http://www.datomic.com/training.html https://github.com/Datomic/day-of-datomic
** HOLD https://github.com/cloojure/tupelo
** HOLD http://clojure-cookbook.com/
** HOLD http://matthiasnehlsen.com/blog/2014/10/15/talk-transcripts/
** HOLD https://github.com/evancz/elm-architecture-tutorial
** HOLD Devcards http://rigsomelight.com/devcards/#!/devdemos.core
** HOLD Read Paul Graham Essay
** Functional Thinking - Neal Ford
*** HOLD http://nealford.com/functionalthinking.html
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft1/index.html][Functional thinking: Thinking functionally, Part 1]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft2/index.html][Functional thinking: Thinking functionally, Part 2]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft3/index.html][Functional thinking: Thinking functionally, Part 3]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft4/index.html][Functional thinking: Immutability]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft5/index.html][Functional thinking: Coupling and composition, Part 1]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft6/index.html][Functional thinking: Coupling and composition, Part 2]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft7/index.html][Functional thinking: Functional features in Groovy, Part 1]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft8/index.html][Functional thinking: Functional features in Groovy, Part 2]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft9/index.html][Functional thinking: Functional features in Groovy, Part 3]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft10/index.html][Functional thinking: Functional design patterns, Part 1]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft11/index.html][Functional thinking: Functional design patterns, Part 2]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft12/index.html][Functional thinking: Functional design patterns, Part 3]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft13/index.html][Functional thinking: Functional error handling with Either and Option]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft14/index.html][Functional thinking: Either trees and pattern matching]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft15/index.html][Functional thinking: Rethinking dispatch]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft16/index.html][Functional thinking: Tons of transformations]]
*** HOLD [[http://www.ibm.com/developerworks/java/library/j-ft17/index.html][Functional thinking: Transformations and optimizations]]
** HOLD https://github.com/rupa/z
** HOLD https://www.bountysource.com/teams/cider
** HOLD http://www.jorgecastro.org/2016/02/12/super-fast-local-workloads-with-juju/
** HOLD http://www.mbtest.org/
** HOLD http://beautifulracket.com/first-lang.html
** HOLD http://practicaltypography.com/equity.html

* Reminders
** [[http://gen.lib.rus.ec/][Library Genesis]]
** Quotes
*** Give me six hours to chop down a tree and I will spend the first four sharpening the axe.  --Abraham Lincoln
** Git
*** unstage = reset HEAD
*** uncommit = reset --soft HEAD^
** Tennis
*** Current Tips
- Serve
  - Square shoulders at last possible moment before contact
- Volley
  - Most of volleying should be done by moving feet to correct position
  - Ready position with arms extended
  - Open racket face when ball is low, and close racket face depending on how high the volley is
  - Lead with the edge
  - C shaped for super high volleys
  - Remember on backhand to bring left elbow up high to provide
    correct prep angle (yet still have the racket in front of body)
  - Backhand volley when ball is coming at body
- Backhand
  - hands under the ball every time
  - bend knees
  - hit out front and extend racket, do not whip

*** Under and up
*** 4 points of contact
*** Seven attributes that lead to success
- Confidence
- Determination
- Engagement
- Professionalism
- Resiliency
- Respectfulness
- Toughness

*** 4 errors and how to prevent them
- Net: Hand must be under ball, and push up and forward
- Long: Close racket face
- Wide L: Full contact through ball
- Wide R: Contact in front
*** Serve
- Toss ball high
- Raise left hand and measure ball while hitting
- Hit up on ball
- Pronate wrist
- Balance, minimize motion in feet
- Right to left motion
- Pronation drill at fence
*** Overhead
- Always turn body sideways to hit an overhead (shoulder turn just like on the serve)
*** DNO footwork
- Defense: Open stance, highest net clearance - 10 ft or more over net, Always cross court
- Neutral: Semi open stance - Middle clearance - 5-10 ft over net, Always cross court
- Offense: Closed stance - Lowest clearance - 2-5 ft or more over net, Down the line?
*** 2-handed backhand
- Stance Sideways, chest facing the fence
- Grip
 - Bottom Continental
 - Top Eastern
- Start with butt of racket pointed straight down at the ground, and racket head up
- Next small circle with racket head kept closed but moving towards
  the ground, butt of racket should be pointing at target at
  completion of circle
- Contact point should be far in front, extend
- Hold on to racket with both hands all the way through follow through
- Loose wrists
*** Ground strokes
- Bend the ball
 - All in the loose wrists
*** Volley
- Most important thing is to lock the wrist with racket straight up, butt pointed straight down at ground
*** Serve + Volley
- On Deuce side only - serve to the backhand, and close in on ad side
  to volley.  Opponent is most likely to hit towards the center
- On Ad side - serve to the backhand wide with kick, close towards the center
*** Drills
- Tie Breaker where one loses a point if they hit two ground strokes
  into the service box. Yell short on the first one that is in the
  service box
- Tie Breaker where goal is to serve to backhand and re-return to backhand
- Serve straight down using only wrist - goal is to get 3 bounces before it bounces over the net
- 50 wrist flops using net to keep arm stationary (hit the net with the racket every time)
** Clojure
- doto
- refs
- agents
** House
*** [[http://homeguides.sfgate.com/transplant-maple-trees-41935.html][How to transplant a maple]]

* readability
- https://incenp.org/notes/2015/using-an-offline-gnupg-master-key.html
- http://www.kalzumeus.com/2016/06/03/kalzumeus-podcast-episode-12-salary-negotiation-with-josh-doody/
- https://blog.caseylucas.com/2013/03/03/oracle-sqlplus-and-instant-client-on-mac-osx-without-dyld_library_path/
- https://alexcabal.com/creating-the-perfect-gpg-keypair/
- http://firstround.com/review/this-90-day-plan-turns-engineers-into-remarkable-managers/
- http://www.drdobbs.com/parallel/lisp-classes-in-the-metaobject-protocol/200000266
- http://sectionhiker.com/portable-hammock-stands-for-camping-by-derek-hansen/
- https://leonid.shevtsov.me/post/oauth2-is-easy/
- https://www.booleanknot.com/blog/2016/07/15/asynchronous-ring.html
- https://hacks.mozilla.org/2014/09/single-div-drawings-with-css/
- http://hubpages.com/technology/Clojure-macro-writing-macros
- https://learnxinyminutes.com/docs/clojure-macros/
- https://www.reddit.com/r/Clojure/comments/4rcwyi/edge_a_complete_clojure_project_you_can_leap_from/d51kzyi
- http://evincarofautumn.blogspot.com/2012/02/why-concatenative-programming-matters.html
- http://cellperformance.beyond3d.com/articles/2008/03/three-big-lies.html
- https://techcrunch.com/2016/07/02/andy-jassys-brief-history-of-the-genesis-of-aws/
- http://help.trello.com/article/821-using-markdown-in-trello
- http://help.trello.com/article/734-how-to-use-trello-like-a-pro
- https://sites.google.com/site/steveyegge2/effective-emacs
- http://blog.darevay.com/2011/08/briefly-the-arity-reduce-pattern-in-clojure/
- http://clojure.org/reference/transients
- http://martinfowler.com/bliki/CircuitBreaker.html
- https://lexi-lambda.github.io/blog/2016/06/12/four-months-with-haskell/
- http://bytopia.org/2014/07/07/inline-functions-in-clojure/
- http://prog21.dadgum.com/215.html
- http://prog21.dadgum.com/218.html
- http://prog21.dadgum.com/195.html
- http://prog21.dadgum.com/177.html
- https://www.gnu.org/software/emacs/emacs-paper.html
- https://github.com/chemouna/ClojureResources
- http://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html
- http://kotka.de/blog/2010/03/memoize_done_right.html
- http://betterexplained.com/guides/calculus/
- http://www.breck-mckye.com/blog/2016/04/monads-explained-quickly/
- http://www.businessinsider.com/the-inside-story-of-how-amazon-created-echo-2016-4?op=1
- https://www.thekua.com/atwork/2016/04/12-years-12-lessons-working-at-thoughtworks/
- http://mockfakestub.logdown.com/posts/289830
- https://wiki.archlinux.org/index.php/Emacs#Shift_.2B_Arrow_keys_not_working_in_emacs_within_tmux
- https://github.com/Homebrew/homebrew-bundle
- https://github.com/colinrymer/philote/blob/master/roles/development/tasks/osx_defaults.yml
- http://www.nytimes.com/2016/03/26/opinion/andy-groves-warning-to-silicon-valley.html?action=click&pgtype=Homepage&clickSource=story-heading&module=opinion-c-col-left-region&region=opinion-c-col-left-region&WT.nav=opinion-c-col-left-region&_r=1
- http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions
- https://www.oreilly.com/ideas/why-a-pattern-language-for-microservices?imm_mid=0e20f1&cmp=em-prog-na-na-newsltr_20160326
- http://jacquesmattheij.com/my-passion-was-my-weak-spot
- http://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html?hp&action=click&pgtype=Homepage&clickSource=story-heading&module=second-column-region&region=top-news&WT.nav=top-news&_r=1
- https://codewords.recurse.com/issues/two/git-from-the-inside-out
- http://blogs.scientificamerican.com/guest-blog/beyond-resveratrol-the-anti-aging-nad-fad/?utm_source=outbrain&utm_medium=content&utm_term=longevity&utm_content=fastandMIT&utm_campaign=june2015
- http://www.fastcompany.com/944128/worker-interrupted-cost-task-switching
- https://moz.com/rand/if-management-is-the-only-way-up-were-all-fd/
- http://stuartsierra.com/2016/01/09/how-to-name-clojure-functions
- https://blogs.oracle.com/jonthecollector/entry/presenting_the_permanent_generation
- http://orgmode.org/worg/org-contrib/babel/languages/ob-doc-clojure.html
- http://www.academia.edu/9761706/Building_a_Technical_Blog_Site_With_Jekyll_And_Emacs
- http://juanreyero.com/open/ox-leanpub/index.html
- http://jonathangraham.github.io/2015/09/01/Clojure%20functions/
- http://juanreyero.com/article/emacs/org-teams.html
- http://paulgraham.com/popular.html
- http://begriffs.com/posts/2016-01-29-making-twenty-percent-time-work.html
- https://divan.github.io/posts/go_concurrency_visualize/
- http://paulgraham.com/javacover.html
- http://paulgraham.com/avg.html
- http://lib.store.yahoo.net/lib/paulgraham/bbnexcerpts.txt
- http://lib.store.yahoo.net/lib/paulgraham/acl1.txt
- http://lib.store.yahoo.net/lib/paulgraham/acl2.txt
- http://paulgraham.com/progbot.html
- https://www.masteringemacs.org/article/spotlight-flycheck-a-flymake-replacement
- http://anmonteiro.com/2016/01/om-next-query-syntax/
- http://web.media.mit.edu/~minsky/OLPC-1.html
- http://staltz.com/why-react-redux-is-an-inferior-paradigm.html
- http://blog.circleci.com/why-we-use-om-and-why-were-excited-for-om-next/
- https://wingolog.org/archives/2016/01/19/unboxing-in-guile
- https://dzone.com/articles/the-observer-pattern-using-modern-java?edition=132257&utm_source=Daily%20Digest&utm_medium=email&utm_content=DZone%20Daily%20Digest&utm_campaign=dd%202016-01-12&userid=796093
- http://seekingalpha.com/article/3817686-options-boost-exxon-mobil-yield
- http://www.more-magic.net/posts/internals-data-representation.html
- http://www.more-magic.net/posts/internals-gc.html
- http://mishadoff.com/blog/clojure-design-patterns/

A Perfect Murder
Action Jackson
Airheads
Akira - CD2
All The Pretty Horses
Amadeus.CD1.avi
Animal Crackers
noble-apoc1.avi
BadBoys
Barry Lyndon Cd2.avi
Basic Instinct
Bend it like Beckham
Beverly Hills Cops 3
Black Mask
Black Rain CD1.avi
Black Rain CD2.avi
